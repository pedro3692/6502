// Code generated by "stringer -type=Instruction"; DO NOT EDIT.

package cpu

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[BRK-0]
	_ = x[RTI-64]
	_ = x[JMP_ABS-76]
	_ = x[STY_ZP-132]
	_ = x[STA_ZP-133]
	_ = x[STX_ZP-134]
	_ = x[STY_ABS-140]
	_ = x[STA_ABS-141]
	_ = x[STX_ABS-142]
	_ = x[STA_ZP_Y-145]
	_ = x[STY_ZP_X-148]
	_ = x[STA_ZP_X-149]
	_ = x[STX_ZP_Y-150]
	_ = x[STA_ABS_Y-153]
	_ = x[STA_ABS_X-157]
	_ = x[LDY_IMM-160]
	_ = x[LDX_IMM-162]
	_ = x[LDY_ZP-164]
	_ = x[LDA_ZP-165]
	_ = x[LDX_ZP-166]
	_ = x[LDA_IMM-169]
	_ = x[LDY_ABS-172]
	_ = x[LDA_ABS-173]
	_ = x[LDX_ABS-174]
}

const _Instruction_name = "BRKRTIJMP_ABSSTY_ZPSTA_ZPSTX_ZPSTY_ABSSTA_ABSSTX_ABSSTA_ZP_YSTY_ZP_XSTA_ZP_XSTX_ZP_YSTA_ABS_YSTA_ABS_XLDY_IMMLDX_IMMLDY_ZPLDA_ZPLDX_ZPLDA_IMMLDY_ABSLDA_ABSLDX_ABS"

var _Instruction_map = map[Instruction]string{
	0:   _Instruction_name[0:3],
	64:  _Instruction_name[3:6],
	76:  _Instruction_name[6:13],
	132: _Instruction_name[13:19],
	133: _Instruction_name[19:25],
	134: _Instruction_name[25:31],
	140: _Instruction_name[31:38],
	141: _Instruction_name[38:45],
	142: _Instruction_name[45:52],
	145: _Instruction_name[52:60],
	148: _Instruction_name[60:68],
	149: _Instruction_name[68:76],
	150: _Instruction_name[76:84],
	153: _Instruction_name[84:93],
	157: _Instruction_name[93:102],
	160: _Instruction_name[102:109],
	162: _Instruction_name[109:116],
	164: _Instruction_name[116:122],
	165: _Instruction_name[122:128],
	166: _Instruction_name[128:134],
	169: _Instruction_name[134:141],
	172: _Instruction_name[141:148],
	173: _Instruction_name[148:155],
	174: _Instruction_name[155:162],
}

func (i Instruction) String() string {
	if str, ok := _Instruction_map[i]; ok {
		return str
	}
	return "Instruction(" + strconv.FormatInt(int64(i), 10) + ")"
}
